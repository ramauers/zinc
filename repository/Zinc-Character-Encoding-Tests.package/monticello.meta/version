(name 'Zinc-Character-Encoding-Tests-dkh.23' message 'Issue #101: checkpoint with additional changes needed for latest version of FileSystemGs for 3.7.0' id 'ae141add-d29c-4d5a-a1f0-5a968ffa59e2' date '04/18/2023' time '18:56:27' author 'dkh' ancestors ((name 'Zinc-Character-Encoding-Tests-dkh.22' message 'split out tests that need to be different betwee GemStone 2.x and 3.x' id '4c0bffed-04c9-4711-bf04-3fde20470ea2' date '06/30/2014' time '07:52:08' author 'dkh' ancestors ((name 'Zinc-Character-Encoding-Tests-dkh.21' message 'Zinc-Character-Encoding-GS24-Core needed for 2.x only ... ZnCharacterEncoderTests>>testUTF8EncoderIncomplete cannot be run in 3.0 either' id '68468062-383b-431a-b20e-16a00e1d09f9' date '06/30/2014' time '00:29:40' author 'dkh' ancestors ((name 'Zinc-Character-Encoding-Tests-dkh.20' message 'checkpoint for 3.1.0.5: 282 run, 280 passes, 1 expected defects, 1 failures, 0 errors, 0 unexpected passes' id 'cb5f0161-46e5-4c9d-94ff-d0eccd381bee' date '06/29/2014' time '17:34:37' author 'dkh' ancestors ((name 'Zinc-Character-Encoding-Tests-dkh.19' message 'remove extra tracing code ... tests greeen for GemStone 3.2' id '0bdf631d-f40e-44bf-aea9-96bbd9e993b4' date '06/29/2014' time '15:48:13' author 'dkh' ancestors ((name 'Zinc-Character-Encoding-Tests-dkh.18' message 'more ZnBufferedWriteStreamTests>>testWriting tracing' id 'd764e722-a133-4c78-8a66-9405f16fd6b5' date '06/29/2014' time '15:29:47' author 'dkh' ancestors ((name 'Zinc-Character-Encoding-Tests-dkh.17' message 'tracing for ZnBufferedWriteStreamTests>>testWriting travis failures' id '5a42fe42-4a01-4d70-8a17-892318983352' date '06/29/2014' time '15:20:31' author 'dkh' ancestors ((name 'Zinc-Character-Encoding-Tests-dkh.16' message 'strip ZnByteStringBecameWideString out of the zinc code (leave in tests) ... test fixes- 282 run, 272 passes, 0 expected defects, 8 failures, 2 errors, 0 unexpected passes' id '6926364f-f8dd-4728-9e61-3827736f5748' date '06/27/2014' time '16:22:44' author 'dkh' ancestors ((name 'Zinc-Character-Encoding-Tests-dkh.15' message 'checkpoint: 282 run, 267 passes, 0 expected defects, 11 failures, 4 errors, 0 unexpected passes' id 'b60bc46f-0862-45a7-8dfa-a312d7010a0c' date '06/26/2014' time '22:01:03' author 'dkh' ancestors ((name 'Zinc-Character-Encoding-Tests-dkh.14' message 'Checkpoint: 282 run, 258 passes, 0 expected defects, 10 failures, 14 errors, 0 unexpected passes' id 'ea6bacc3-e91e-48be-ac84-bdfed2a54020' date '06/25/2014' time '21:52:53' author 'dkh' ancestors ((name 'Zinc-Character-Encoding-Tests-JohanBrichau.13' message 'porting code' id '0ca8097f-781c-4081-be27-d7d538ea2df1' date '01/05/2014' time '15:26:59' author 'JohanBrichau' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.12' message 'Added an optimalization to ZnUTF8Encoder>>#readInto:startingAt:count:fromStream: to avoid the price of #becomeForward: when a ByteString to WideString conversion happens' id '691abf05-9485-451a-aea0-6a3a08dd2939' date '06/11/2013' time '04:33:14' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.11' message 'merge' id '352e538c-d3c0-411c-be19-bb8e7181b391' date '06/11/2013' time '09:22:23' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.10' message 'Added an optimized ZnUTF8Encoder>>#decodeBytes: and an even faster #decodeBytesIntoWideString: (thx johnny/JanStruz)' id 'c4338bce-4823-4afd-9c03-ed82ddf2afff' date '06/10/2013' time '11:20:45' author 'SvenVanCaekenberghe' ancestors () stepChildren ())(name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.9' message 'Added support to ZnUTF8Encoder to detect overlong (non-shortest form) encodings as well as to skip the Unicode Byte Order Mark (BOM) character' id '3cfdf396-c625-4c8f-9aea-ede90630edcb' date '06/04/2013' time '05:29:38' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.8' message 'Introduction of an explicit ZnInvalidUTF8 exception.' id '873f8d6a-5631-4dfb-8fb5-cda3e522c9ee' date '06/03/2013' time '08:15:02' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.7' message 'ZnUTF8Encoder:- enabled #next:putAll:startingAt:toStream: for real- added & enabled #optimizedReadInto:startingAt:count:fromStream:- #nextFromStream now signals specific errors on eof- some refactoring/cleanup' id 'dc085fe8-a4e4-46f4-a5c0-2678315e7428' date '05/25/2013' time '10:30:26' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.6' message 'Introduction of ZnCharacterEncoder>>#next:putAll:startingAt:toStream with optimized implementations in ZnNullEncoder and ZnUTF8Encoder for ByteString instances' id '49bd7fce-ffab-4c09-9bf3-a3c550090cab' date '05/22/2013' time '04:16:17' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.5' message 'Added String>>#urlEncoded & #urlDecoded - Thx Camillo Bruni' id 'c0387a62-53b8-421c-b74b-43d224d63afc' date '04/16/2013' time '09:19:26' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.4' message 'Bugfix to ZnPercentEncoder: always use 2 hex digits (Thanks Benjamin Van Ryseghem)' id 'a1f1c1f3-7878-45db-a609-0d4c3ff81e69' date '03/01/2013' time '09:36:51' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.3' message 'merging in some Gemstone portability changes by Ken Treis' id '9045618f-8b58-4d47-b6f8-8c18ca27869d' date '01/21/2013' time '01:16:18' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-KenTreis.2.1' message 'Minor changes for GemStone Compatibility that hopefully don''t break anything in Pharo:* Use `ByteArray new writeStream` rather than `#[] writeStream`* In ZnBase64EncoderTests, put CRs in for line breaks explicitly' id '0c541244-918a-4df3-9543-170b07bd6870' date '01/19/2013' time '11:05:42' author 'KenTreis' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.2' message 'stop using ZnNullEncoder for latin1;added #beLenient option to make a ZnByteEncoder non-strict (the old behavior)' id '5a82017c-5d0e-448c-a7a3-1b8f35aae2d2' date '12/17/2012' time '04:08:57' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.1' message 'creation of Zinc-Character-Encoding-[Core|Tests] by moving various classes out of Zinc-HTTP' id '9f23b0ec-9909-4839-b631-db4c10c9f613' date '12/16/2012' time '05:01:49' author 'SvenVanCaekenberghe' ancestors () stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())